Salim TODO :

- TreeService à pluger avec Visit/Patient Entity
- TreeService à refactorer en ayant directement le center nesté dans le patient (appel db via with patient.center)
- Les regles specifiques devraient etre identifié par visitGroupName et pas par Modality !
- Faire une couche d'abstraction par study pour get les objet specifique (pour pas avoir a dupliquer les fichiers des visites qui ont le meme comportement)
- GetCreatableVisit soit faire passer par les object specifique pour avoir la main soit à supprimer et faire avec definition de l'etude?

- Dans les mails passer des PatentId à PatientNumber dans le texte et titre des mails
- Optimiser l'utilisation des authorization service en injectant les data depuis le usecase (ou les rendre stateless)
- Optimiser le service visit en injectant directement le visit context

Reste Autres :
- Orthanc Send to peer
- Mise en place scheduler
- Monitoring scheduler via tracker
- Dicom liée aux review  => Impact sur la db a designer => probablement privilegier les associated file des reviews

- OHIF essayer de faire passer le role dans les requetes => Faire un GaelO plugin dans OHIF
pourra modifier cornerstoneWADOImageLoader pour injecter l'etude courante
et devrait pouvoir recuperer des info soit via le useQuery soit via un localstorage

---- Refactoring Backend ----
Entity :
- Pluger toutes les reponses "data" sur ces entity response
=> GetPossibleUpload => VisitEntity ?
=> GetReviewProgression => Visit + Review_status + Progression entity?
=> utiliser les entity en sortie de repository ? et dissocier la lecture de l'entity de l'output ?
---- /Refactoring Backend ------

--- Etudes ancillaires ---
Ne doit pas pouvoir faire les relance d'upload => Voir avec Emilie
Adapter les points de lecture :
GetDicomFileSupervisor => Passe par les seriesUID mais le RBAC doit autoriser les etude ancillaire
--- /Etudes ancillaires ---

**** Tests ***
Test feature : visit et autres (dicom...)
Tests Services à faire
Mock des interfaces pour les uses cases et les services
Les tests ne font pas d'assertion sur
- le tracker => Via un spy ?
- l'envoi de mails => voir doc laravel
Review => tester un scenario de custom conclusion / adjudication

Salim TODO :

- Optimiser l'utilisation des authorization service en injectant les data depuis le usecase (ou les rendre stateless)

Creatable Visit : Manque Study Custom Logic => Passer dans frontend
Review  : faire une propriete dans visit pour savoir si review disponible a un user en plus de status reviewAvailable ?

Reste Autres :
- Monitoring etude (espace / patient ...)
- Mise en place scheduler
- Monitoring scheduler via tracker
- Orthanc Send to peer
- Connecteur FTP/SFTP
- Dummy Run => Impact sur la db a designer => peut etre ne rien faire et passer par une etude de challenge
- Dicom liée aux review  => Impacte sur la db a designer => probablement privilegier les associated file des reviews

- OHIF essayer de faire passer le role dans les requetes => Faire un GaelO plugin dans OHIF
pourra modifier cornerstoneWADOImageLoader pour injecter l'etude courante
et devrait pouvoir recuperer des info soit via le useQuery soit via un localstorage


--- Etudes ancillaires ---
Ne doit pas pouvoir faire les relance d'upload => Voir avec Emilie
Adapter les points de lecture
getCentersFromStudy => Doit prendre centres des patient de l'étude princeps si ancillaire
GetDicomFileSupervisor => Doit prendre patient de l'etude princeps
GetDicomStudiesFromVisitType => doit prendre patient dans etude princeps
GetPatientFromStudy
GetPatientInStudyFromCenters
GetPatientVisitsInStudyg
GetVisitsFromStudy
GetVisitsFromVisitType
GetVisitTree


=> Reste avoir Study Service pour limiter les fonctionalité des etudes ancillaires

--- /Etudes ancillaires ---

---- Refactoring Backend ----
Refac pour la lecture eviter de passer par des services pour laisser les services à l'ecriture ?
Dicom Series Service => peut etre evoluer vers un DicomService pour les deux niveaux

Entity :
- Pluger toutes les reponses "data" sur ces entity response
=> GetPossibleUpload => VisitEntity ?
=> GetReviewProgression => Visit + Review_status + Progression entity?
=> GetVisitTree => ?, visit ?

---- /Refactoring Backend ------


**** Tests ***
Test feature : visit et autres (dicom...)
Tests Services à faire
Mock des interfaces pour les uses cases et les services
Les tests ne font pas d'assertion sur
- le tracker => Via un spy ?
- l'envoi de mails => voir doc laravel
Review => tester un scenario de custom conclusion / adjudication


--- Maintenance Tips ---

A executer en post install :
docker-compose run gaelo2 php artisan migrate --seed **ou** php artisan db:migrate --seed

Afficher une nouvelle APP_KEY : (sert a cryptage/decryptage mais pas pour hash)
php artisan key:generate --show

Si dev :
php artisan telescope:install

--- /Maintenance Tips ---
